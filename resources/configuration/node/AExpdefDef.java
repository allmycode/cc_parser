/* This file was generated by SableCC (http://www.sablecc.org/). */

package configuration.node;

import configuration.analysis.*;

@SuppressWarnings("nls")
public final class AExpdefDef extends PDef
{
    private PExpdef _expdef_;

    public AExpdefDef()
    {
        // Constructor
    }

    public AExpdefDef(
        @SuppressWarnings("hiding") PExpdef _expdef_)
    {
        // Constructor
        setExpdef(_expdef_);

    }

    @Override
    public Object clone()
    {
        return new AExpdefDef(
            cloneNode(this._expdef_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpdefDef(this);
    }

    public PExpdef getExpdef()
    {
        return this._expdef_;
    }

    public void setExpdef(PExpdef node)
    {
        if(this._expdef_ != null)
        {
            this._expdef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expdef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expdef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expdef_ == child)
        {
            this._expdef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expdef_ == oldChild)
        {
            setExpdef((PExpdef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
